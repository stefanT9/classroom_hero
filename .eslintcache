[{"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/main/mainScreenDashboard.tsx":"1","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/main/mainScreenLogin.tsx":"2","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/main/components/conferenceCard.tsx":"3","/Users/stefantomsa/Facultate/classroom_hero/src/context/authContext.tsx":"4","/Users/stefantomsa/Facultate/classroom_hero/src/index.tsx":"5","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/SelectUsernameModal.tsx":"6","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/ChatWindow.tsx":"7","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/auth/authModal.tsx":"8","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/navigation/Topnav.tsx":"9","/Users/stefantomsa/Facultate/classroom_hero/src/reportWebVitals.js":"10","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/CallSettingsBar.tsx":"11","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/main/mainScreen.tsx":"12","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/navigation/topnav.tsx":"13","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/navigation/profileChip.tsx":"14","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/auth/registerForm.tsx":"15","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/ChatMessage.tsx":"16","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/Conference.tsx":"17","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/auth/resetPasswordForm.tsx":"18","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/profile/profilePage.tsx":"19","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/layout/layout.tsx":"20","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/forms/createConferenceForm.tsx":"21","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/createConferenceFab.tsx":"22","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/auth/loginForm.tsx":"23"},{"size":1594,"mtime":1618683033617,"results":"24","hashOfConfig":"25"},{"size":1960,"mtime":1617825899655,"results":"26","hashOfConfig":"25"},{"size":2108,"mtime":1618682856424,"results":"27","hashOfConfig":"25"},{"size":2915,"mtime":1617911285124,"results":"28","hashOfConfig":"25"},{"size":1980,"mtime":1617917025947,"results":"29","hashOfConfig":"25"},{"size":1777,"mtime":1617481564782,"results":"30","hashOfConfig":"25"},{"size":3392,"mtime":1617231672018,"results":"31","hashOfConfig":"25"},{"size":2242,"mtime":1617481526332,"results":"32","hashOfConfig":"25"},{"size":1622,"mtime":1617913582666,"results":"33","hashOfConfig":"25"},{"size":354,"mtime":1614696512688,"results":"34","hashOfConfig":"25"},{"size":1707,"mtime":1617232350775,"results":"35","hashOfConfig":"25"},{"size":1171,"mtime":1618682693685,"results":"36","hashOfConfig":"25"},{"size":1682,"mtime":1617916421542,"results":"37","hashOfConfig":"25"},{"size":1437,"mtime":1618682403743,"results":"38","hashOfConfig":"25"},{"size":116,"mtime":1617271767481,"results":"39","hashOfConfig":"25"},{"size":1206,"mtime":1617231792582,"results":"40","hashOfConfig":"25"},{"size":7050,"mtime":1617918993540,"results":"41","hashOfConfig":"25"},{"size":125,"mtime":1617479751765,"results":"42","hashOfConfig":"25"},{"size":206,"mtime":1617917040522,"results":"43","hashOfConfig":"25"},{"size":799,"mtime":1617916937849,"results":"44","hashOfConfig":"25"},{"size":1519,"mtime":1618687078149,"results":"45","hashOfConfig":"25"},{"size":841,"mtime":1618683822254,"results":"46","hashOfConfig":"25"},{"size":1622,"mtime":1617481497592,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"8ll0ej",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/main/mainScreenDashboard.tsx",["110"],"import \"fontsource-roboto\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport { ConferenceCard } from \"./components/conferenceCard\";\nimport { CreateConferenceFab } from \"../common/createConferenceFab\";\n\ninterface MainScreenAuthProps {\n  userDetails: UserDetails;\n}\n\nexport default function MainScreenDashboard(props: MainScreenAuthProps) {\n  const { userDetails } = props;\n  const [conferences, setConferences] = useState<Array<IConference>>([]);\n\n  useEffect(() => {\n    fetch(\"/api/conference/available\")\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.conferences) {\n          setConferences(res.conferences);\n        }\n        // todo: handle on error\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  useEffect(() => {\n    console.log(\"conferences updated\", conferences);\n  }, [conferences]);\n\n  return (\n    <Container>\n      <Typography variant=\"h2\">Past conferences:</Typography>\n      <div>\n        {conferences\n          .filter((conference) => new Date(conference.startTime) < new Date())\n          .map((conference, idx) => (\n            <ConferenceCard conference={conference} />\n          ))}\n      </div>\n      <Typography variant=\"h2\">Future conferences:</Typography>\n      <div>\n        {conferences\n          .filter((conference) => new Date(conference.startTime) >= new Date())\n          .map((conference, idx) => (\n            <ConferenceCard conference={conference} />\n          ))}\n      </div>\n      <CreateConferenceFab />\n    </Container>\n  );\n}\n",["111","112"],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/main/mainScreenLogin.tsx",["113"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Grid, Button, TextField } from \"@material-ui/core\";\nimport \"fontsource-roboto\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport LoginForm from \"../auth/loginForm\";\n\nconst joinConferenceValidationSchema = yup.object({\n  conferenceId: yup.string().required(),\n});\n\nconst authValidationSchema = yup.object({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\ninterface MainScreenLoginProps {\n  login(email: string, password: string): Promise<any>;\n}\nexport default function MainScreenLogin(props: MainScreenLoginProps) {\n  const { login } = props;\n  const history = useHistory();\n  const joinConferenceFormik = useFormik({\n    initialValues: {\n      conferenceId: \"\",\n    },\n    validationSchema: joinConferenceValidationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n      history.push(`/conference/${values.conferenceId}`);\n    },\n  });\n  const authFormik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: authValidationSchema,\n    onSubmit: (values) => {\n      login(values.email, values.password);\n      console.log(values);\n    },\n  });\n\n  return (\n    <Grid container spacing={3} alignItems=\"center\">\n      <Grid item xs={3}>\n        <form\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n          onSubmit={joinConferenceFormik.handleSubmit}\n        >\n          <TextField\n            id=\"conferenceId\"\n            name=\"conferenceId\"\n            value={joinConferenceFormik.values.conferenceId}\n            onChange={joinConferenceFormik.handleChange}\n          />\n          <Button type=\"submit\" disabled={joinConferenceFormik.isSubmitting}>\n            join conference\n          </Button>\n        </form>\n      </Grid>\n      <Grid item xs={6} />\n      <Grid item xs={3}>\n        <LoginForm login={login} />\n      </Grid>\n    </Grid>\n  );\n}\n",["114","115"],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/main/components/conferenceCard.tsx",["116"],"import React from \"react\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\ninterface ConferenceCardProps {\n  conference: IConference;\n}\n\nexport const ConferenceCard = (props: ConferenceCardProps) => {\n  const { conference } = props;\n  const history = useHistory();\n  const handleJoinConference = () => {\n    history.push(`/conference/${conference._id}`);\n  };\n  return (\n    <div>\n      <Typography>{conference.startTime}</Typography>\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Typography>{conference.name}</Typography>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Typography>{conference.startTime}</Typography>\n          <Accordion style={{ width: \"100%\" }}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography>{`${conference.participantEmails.length} other participants invited`}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                {conference.participantEmails.map((email) => (\n                  <Typography>{email}</Typography>\n                ))}\n              </div>\n            </AccordionDetails>\n          </Accordion>\n          <Button\n            variant=\"outlined\"\n            classes={{ root: \"primary-button\" }}\n            onClick={handleJoinConference}\n          >\n            Join now\n          </Button>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n","/Users/stefantomsa/Facultate/classroom_hero/src/context/authContext.tsx",["117"],"import React, { createContext, useState, useEffect } from \"react\";\nimport { v4 as uuidV4 } from \"uuid\";\nimport { useCookies } from \"react-cookie\";\n\nconst defaultUserDetails: UserDetails = {\n  token: null,\n  id: null,\n  username: null,\n};\ninterface AuthContextInterface {\n  userDetails: UserDetails;\n  login: (email: string, password: string) => Promise<any>;\n  register: (email: string, password: string) => Promise<any>;\n  softLogin: (username: string) => Promise<any>;\n  logout: () => Promise<any>;\n  isAuth: () => any;\n}\nexport const AuthContext = createContext<Partial<AuthContextInterface>>({});\n\nconst AuthContextStore = (props: any) => {\n  const [userDetails, setUserDetails] = useState<UserDetails>(\n    defaultUserDetails\n  );\n\n  const [cookies, setCookie] = useCookies([\"access_token\"]);\n\n  const softLogin = async (username: string) => {\n    setUserDetails((userDetails: UserDetails) => ({\n      ...userDetails,\n      username: username,\n      id: `tmp_${uuidV4()}`,\n    }));\n  };\n  const login = async (email: string, password: string) => {\n    return fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(\"heres the body\", res);\n        if (res.message) {\n          throw new Error(res.message);\n        }\n        setUserDetails({\n          username: res.user.email,\n          id: res.user._id,\n          token: res.token,\n        });\n        setCookie(\"access_token\", res.token);\n        return true;\n      })\n      .catch((err) => {\n        console.log(\"heres the error\", err);\n        return {\n          status: false,\n          message: err.message,\n        };\n      });\n  };\n  const register = async (email: string, password: string) => {};\n  const logout = async () => {\n    setUserDetails(defaultUserDetails);\n    setCookie(\"access_token\", null);\n  };\n  const isAuth = () => {\n    if (!userDetails.id || userDetails.id.startsWith(\"tmp\")) {\n      console.log(\"is not auth\");\n      return false;\n    } else {\n      console.log(\"is auth\");\n      return true;\n    }\n  };\n  useEffect(() => {\n    fetch(\"/api/auth/verify-token\", { method: \"POST\" })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.user) {\n          setUserDetails((userDetails) => ({\n            ...userDetails,\n            username: res.user.email,\n            id: res.user._id,\n            token: cookies[\"access_token\"],\n          }));\n        } else {\n          console.log(res.error);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{ userDetails, isAuth, login, register, logout, softLogin }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\nexport default AuthContextStore;\n",["118","119"],"/Users/stefantomsa/Facultate/classroom_hero/src/index.tsx",["120"],"import \"./index.scss\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Conference from \"./bundles/conference/components/Conference\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AuthContextStore, { AuthContext } from \"./context/authContext\";\nimport MainScreen from \"./bundles/main/mainScreen\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport ProfilePage from \"./bundles/profile/profilePage\";\nimport BaseLayout from \"./bundles/common/layout/layout\";\n\nconst theme = createMuiTheme({\n  typography: {\n    button: {\n      textTransform: \"none\",\n    },\n  },\n});\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <AuthContextStore>\n        <Router>\n          <Route exact path=\"/\" children={<MainScreen />} />\n          <Route\n            exact\n            path=\"/conference/:conferenceId\"\n            children={\n              <AuthContext.Consumer>\n                {({ userDetails }) =>\n                  userDetails && <Conference userDetails={userDetails} />\n                }\n              </AuthContext.Consumer>\n            }\n          />\n\n          <Route\n            exact\n            path=\"/profile\"\n            children={\n              <AuthContext.Consumer>\n                {({ userDetails, isAuth }) =>\n                  (userDetails && isAuth && isAuth() && (\n                    <ProfilePage userDetails={userDetails} />\n                  )) || <div>you need to login</div>\n                }\n              </AuthContext.Consumer>\n            }\n          />\n        </Router>\n      </AuthContextStore>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/SelectUsernameModal.tsx",[],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/ChatWindow.tsx",["121","122"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Icon,\n  List,\n  TextField,\n  makeStyles,\n} from \"@material-ui/core\";\nimport \"fontsource-roboto\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport ChatMessage from \"./ChatMessage\";\nimport { useFormik } from \"formik\";\nimport { AuthContext } from \"../../../context/authContext\";\nimport * as yup from \"yup\";\n\nconst useStyles = makeStyles((theme) => ({\n  sidenavWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  message: yup.string().required(),\n});\ninterface ChatWindowProps {\n  socket: SocketIOClient.Socket;\n  userDetails: UserDetails;\n}\nexport default function ChatWindow(props: ChatWindowProps) {\n  const { socket, userDetails } = props;\n  const classes = useStyles();\n  const [messages, setMessages] = useState<Array<Message>>([]);\n  const formik = useFormik({\n    initialValues: {\n      message: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      if (socket) {\n        console.log(\"message sent\");\n\n        const message = {\n          userId: userDetails.id,\n          username: userDetails.username,\n          message: values.message,\n          dateTime: new Date(),\n        };\n        socket.emit(\"room-chat-message-post\", message);\n      } else {\n        console.log(\"curently not working\", socket);\n      }\n    },\n  });\n\n  useEffect(() => {\n    const socketInitialisedInterval = setInterval(() => {\n      if (socket) {\n        console.log(\"updated socket\");\n        // requests the message history\n        socket.emit(\"room-chat-message-history\");\n\n        // recives the message history\n        socket.on(\"room-chat-message-all\", (messages: Array<Message>) => {\n          console.log(messages);\n          setMessages(messages);\n        });\n\n        // recives a new message\n        socket.on(\"room-chat-message-post\", (message: Message) => {\n          console.log(\"something good here\");\n          message.dateTime = new Date(message.dateTime);\n          setMessages((messages) => [...messages, message]);\n        });\n        clearInterval(socketInitialisedInterval);\n      }\n    }, 100);\n  }, [socket]);\n  return (\n    <Paper className={classes.sidenavWrapper}>\n      <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n        <div style={{ flexGrow: 1, overflow: \"scroll\" }}>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {messages.map((val: Message) => {\n              console.log(val);\n              return (\n                <ChatMessage\n                  author={val.username}\n                  message={val.message}\n                  dateTime={val.dateTime}\n                  isMine={userDetails.id === val.userId}\n                />\n              );\n            })}\n          </div>\n        </div>\n\n        <form\n          style={{ height: \"auto\", display: \"flex\", flexDirection: \"row\" }}\n          onSubmit={formik.handleSubmit}\n        >\n          <TextField\n            fullWidth\n            id=\"message\"\n            name=\"message\"\n            value={formik.values.message}\n            onChange={formik.handleChange}\n          />\n          <IconButton type=\"submit\">\n            <Icon>\n              <SendIcon />\n            </Icon>\n          </IconButton>\n        </form>\n      </div>\n    </Paper>\n  );\n}\n","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/auth/authModal.tsx",["123"],"import {\n  Dialog,\n  DialogProps,\n  Paper,\n  DialogTitle,\n  Button,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport LoginForm from \"./loginForm\";\nimport { AuthContext } from \"../../context/authContext\";\nimport classes from \"./auth.module.scss\";\nimport ResetPasswordForm from \"./resetPasswordForm\";\nimport RegisterForm from \"./registerForm\";\n\nconst LoginModal = (\n  props: DialogProps & { formType: \"Login\" | \"Register\" | \"ResetPassword\" }\n) => {\n  const [formType, setFormType] = useState<\n    \"Login\" | \"Register\" | \"ResetPassword\"\n  >(props.formType);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const dialogProps: DialogProps = props;\n\n  const handleChangeToLogin = () => {\n    setIsLoading(true);\n    setFormType(\"Login\");\n    setIsLoading(false);\n  };\n  const handleChangeToResetPassword = () => {\n    setIsLoading(true);\n    setFormType(\"ResetPassword\");\n    setIsLoading(false);\n  };\n  const handleChangeToRegister = () => {\n    setIsLoading(true);\n    setFormType(\"Register\");\n\n    setIsLoading(false);\n  };\n  return (\n    <AuthContext.Consumer>\n      {({ login }) =>\n        login && (\n          <Dialog\n            fullWidth={true}\n            maxWidth=\"xs\"\n            scroll={\"paper\"}\n            {...dialogProps}\n          >\n            <Paper className={classes.dialogTopnav}>\n              <DialogTitle>{formType}</DialogTitle>\n            </Paper>\n            {formType === \"Login\" && <LoginForm login={login} />}\n            {formType === \"Register\" && <RegisterForm />}\n            {formType === \"ResetPassword\" && <ResetPasswordForm />}\n            <div style={{ height: \"2rem\" }} />\n            {formType !== \"Login\" && (\n              <Button onClick={handleChangeToLogin}>Sign in</Button>\n            )}\n            {formType !== \"ResetPassword\" && (\n              <Button onClick={handleChangeToResetPassword}>\n                Forgot password?\n              </Button>\n            )}\n            {formType !== \"Register\" && (\n              <Button onClick={handleChangeToRegister}>\n                Don't have an account? Sign up !\n              </Button>\n            )}\n          </Dialog>\n        )\n      }\n    </AuthContext.Consumer>\n  );\n};\n\nexport default LoginModal;\n","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/navigation/Topnav.tsx",["124","125"],"/Users/stefantomsa/Facultate/classroom_hero/src/reportWebVitals.js",[],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/CallSettingsBar.tsx",["126"],"import { Paper, IconButton, makeStyles } from \"@material-ui/core\";\nimport \"fontsource-roboto\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport { MicRounded } from \"@material-ui/icons\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport classes from \"./conference.module.scss\";\n\ninterface StreamSettings {\n  audio: Boolean;\n  video: Boolean;\n}\ninterface CallSettingsProps {\n  disableCamera: Function;\n  disableMicrophone: Function;\n  enableCamera: Function;\n  enableMicrophone: Function;\n  streamSettings: StreamSettings;\n}\nexport default function CallSettingsBar(props: CallSettingsProps) {\n  const {\n    disableCamera,\n    disableMicrophone,\n    enableCamera,\n    enableMicrophone,\n    streamSettings,\n  } = props;\n  return (\n    <Paper className={classes.callSettingsWrapper}>\n      {streamSettings.audio ? (\n        <IconButton\n          onClick={() => {\n            disableMicrophone();\n          }}\n        >\n          <MicRounded />\n        </IconButton>\n      ) : (\n        <IconButton\n          onClick={() => {\n            enableMicrophone();\n          }}\n        >\n          <MicOffIcon />\n        </IconButton>\n      )}\n      {streamSettings.video ? (\n        <IconButton\n          onClick={() => {\n            disableCamera();\n          }}\n        >\n          <VideocamIcon />\n        </IconButton>\n      ) : (\n        <IconButton\n          onClick={() => {\n            enableCamera();\n          }}\n        >\n          <VideocamOffIcon />\n        </IconButton>\n      )}\n      <IconButton>\n        <SettingsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/main/mainScreen.tsx",["127","128"],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/navigation/topnav.tsx",["129","130"],"import React, { useState } from \"react\";\nimport classes from \"../common.module.scss\";\nimport { Grid, Button, Typography, Container } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AuthModal from \"../../auth/authModal\";\nimport ProfileChip from \"./profileChip\";\n\ninterface TopnavProps {\n  userDetails: UserDetails;\n  login: (email: string, password: string) => void;\n  register: (email: string, password: string) => void;\n  logout: () => void;\n  isAuth: () => boolean;\n}\nexport default function Topnav(props: TopnavProps) {\n  const { userDetails, isAuth, login, register, logout } = props;\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  console.log(isAuth(), userDetails);\n  return (\n    <Grid item xs={12}>\n      <div className={classes[\"topnav-wrapper\"]}>\n        <Container>\n          <div className={classes[\"topnav\"]}>\n            <Button>\n              <MenuIcon className={classes[\"white-text\"]} />\n            </Button>\n            {isAuth() && (\n              <ProfileChip userDetails={userDetails} logout={logout} />\n            )}\n            {!isAuth() && (\n              <div>\n                <Button onClick={handleOpen}>\n                  <Typography className={classes[\"white-text\"]}>\n                    Login\n                  </Typography>\n                </Button>\n                <AuthModal\n                  onClose={handleClose}\n                  open={open}\n                  formType={\"Login\"}\n                />\n              </div>\n            )}\n          </div>\n        </Container>\n      </div>\n    </Grid>\n  );\n}\n","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/navigation/profileChip.tsx",[],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/auth/registerForm.tsx",[],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/ChatMessage.tsx",["131","132","133"],"import react from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { AuthContext } from \"../../../context/authContext\";\ninterface ChatMessageProps {\n  author: String;\n  message: String;\n  dateTime: Date;\n  isMine: boolean;\n}\nexport default function ChatMessage(props: ChatMessageProps) {\n  const { author, message, dateTime, isMine } = props;\n  return (\n    <div\n      style={{\n        width: \"90%\",\n        marginTop: \"2rem\",\n        alignSelf: isMine ? \"flex-end\" : \"flex-start\",\n      }}\n    >\n      <Typography variant=\"subtitle2\">{author}</Typography>\n      <Paper style={{ width: \"100%\", height: \"100%\" }}>\n        <Container>\n          <Typography variant=\"subtitle2\">{message}</Typography>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Typography variant=\"subtitle2\">{`${dateTime.toLocaleTimeString()}`}</Typography>\n          </div>\n        </Container>\n      </Paper>\n    </div>\n  );\n}\n","/Users/stefantomsa/Facultate/classroom_hero/src/bundles/conference/components/Conference.tsx",["134","135","136"],"import React, { useEffect, useState, useRef } from \"react\";\nimport \"fontsource-roboto\";\nimport Peer from \"peerjs\";\nimport { Paper, Typography, makeStyles } from \"@material-ui/core\";\n\nimport ChatWindow from \"./ChatWindow\";\nimport { useParams } from \"react-router-dom\";\nimport CallSettingsBar from \"./CallSettingsBar\";\nimport socketIOClient, { Socket } from \"socket.io-client\";\nimport SelectUsernameModal from \"./SelectUsernameModal\";\n\nimport classes from \"./conference.module.scss\";\nimport { AuthContext } from \"../../../context/authContext\";\nimport BaseLayout from \"../../common/layout/layout\";\n\ninterface ConferenceProps {\n  userDetails: UserDetails;\n}\ninterface ConferenceParams {\n  conferenceId: string;\n}\nexport default function Conference(props: ConferenceProps) {\n  const [streamSettings, updateStreamSettings] = useState({\n    video: true,\n    audio: true,\n  });\n\n  const { userDetails } = props;\n  //todo:fix type\n  const [peers, setPeers] = useState<Array<any>>([]);\n  const { conferenceId } = useParams<ConferenceParams>();\n\n  const [peer, setPeer] = useState<Peer>();\n  const [socket, setSocket] = useState<SocketIOClient.Socket>();\n  const mediaStream = useRef(\n    navigator.mediaDevices.getUserMedia({ video: true, audio: false })\n  );\n  useEffect(() => {\n    setPeer(() => {\n      const myPeer = new Peer(userDetails.id || undefined, {\n        host: \"localhost\",\n        port: 9000,\n        path: \"/signaling\",\n      });\n      myPeer.on(\"connection\", (connection) => {\n        connection.on(\"data\", (message) => {});\n      });\n\n      myPeer.on(\"call\", function (call) {\n        mediaStream.current\n          .then((stream) => {\n            call.answer(stream);\n            call.on(\"stream\", (remoteStream) => {\n              //\n            });\n          })\n          .catch((err) => {\n            console.log(\"failed to get stream\", err);\n          });\n      });\n      return myPeer;\n    });\n  }, [userDetails]);\n  useEffect(() => {\n    setSocket((oldSocket: SocketIOClient.Socket | undefined) => {\n      if (peer === undefined) return oldSocket;\n\n      const socket = socketIOClient();\n      peer.on(\"open\", (id) => {\n        console.log(userDetails);\n        socket.emit(\"join-room\", {\n          id: userDetails.id,\n          username: userDetails.username,\n          room: conferenceId,\n        });\n        //todo fix this type\n        socket.on(\"message\", (data: any) => {\n          console.log(data);\n        });\n        // todo: fix this type\n        socket.on(\"room-users\", ({ users }: any) => {\n          setPeers(\n            users\n              .filter((user: any) => user.id !== id)\n              .map((user: any) => ({\n                id: user.id,\n                username: user.username,\n                ref: undefined,\n              }))\n          );\n          users\n            .filter((user: any) => user.id !== id)\n            .forEach((user: any) => {\n              const peerDataConnection = peer.connect(user.id);\n\n              peerDataConnection.on(\"open\", () => {\n                peerDataConnection.send(\"im in\");\n              });\n\n              mediaStream.current\n                .then((stream) => {\n                  const peerCallConnection = peer.call(user.id, stream);\n                  peerCallConnection.on(\"stream\", (remoteStream) => {\n                    // todo: fix type here\n                    const videoTag: any = document.getElementById(\n                      `video${user.id}`\n                    );\n                    try {\n                      videoTag.srcObject = remoteStream;\n                    } catch (err) {\n                      console.log(err);\n                    }\n                  });\n                })\n                .catch((err) => {\n                  console.log(\"error getting mediaStream\", err);\n                });\n            });\n        });\n        socket.on(\"room-users-joined\", ({ userId, username }: any) => {\n          console.log(\"user joined\", userId, username);\n          setPeers((peers: any) => [\n            ...peers,\n            { id: userId, username: username, ref: undefined },\n          ]);\n        });\n        socket.on(\"room-users-left\", ({ userId }: any) => {\n          console.log(\"user left\", userId);\n          setPeers((peers) => [...peers].filter((val) => val.id !== userId));\n        });\n      });\n      return socket;\n    });\n  }, [peer, userDetails]);\n\n  useEffect(() => {\n    console.log(\"peers changed\", peers);\n  }, [peers]);\n\n  function getRandomColor() {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  function disableMicrophone() {\n    updateStreamSettings((stream) => ({ video: stream.video, audio: false }));\n  }\n  function enableMicrophone() {\n    updateStreamSettings((stream) => ({ video: stream.video, audio: true }));\n  }\n  function disableCamera() {\n    updateStreamSettings((stream) => ({ video: false, audio: stream.audio }));\n  }\n  function enableCamera() {\n    updateStreamSettings((stream) => ({ video: true, audio: stream.audio }));\n  }\n\n  return (\n    <BaseLayout>\n      <AuthContext.Consumer>\n        {({ userDetails, softLogin }) => {\n          console.log(userDetails);\n          return (\n            softLogin &&\n            userDetails &&\n            !userDetails.username && (\n              <SelectUsernameModal open={true} softLogin={softLogin} />\n            )\n          );\n        }}\n      </AuthContext.Consumer>\n      <div className={classes.body}>\n        <div style={{ gridRow: 1, gridColumnStart: 1, gridColumnEnd: 3 }}>\n          <Paper\n            style={{\n              height: \"100%\",\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          ></Paper>\n        </div>\n        <Paper className={classes.mainScreen}>\n          {peers.map((val, idx) => {\n            console.log(\"peer to interface\", val);\n            return (\n              <div\n                className={classes.participantWrapper}\n                style={{ backgroundColor: getRandomColor() }}\n              >\n                <video\n                  id={`video${val.id}`}\n                  className={classes.participantVideo}\n                  autoPlay\n                />\n                <Typography className={classes.participantNameTypography}>\n                  {val.username}\n                </Typography>\n              </div>\n            );\n          })}\n        </Paper>\n        <div style={{ gridRow: 2, gridColumn: 2, overflow: \"hidden\" }}>\n          {socket && <ChatWindow socket={socket} userDetails={userDetails} />}\n        </div>\n        <div style={{ gridRow: 3, gridColumnStart: 1, gridColumnEnd: 3 }}>\n          <CallSettingsBar\n            streamSettings={streamSettings}\n            disableMicrophone={disableMicrophone}\n            enableMicrophone={enableMicrophone}\n            disableCamera={disableCamera}\n            enableCamera={enableCamera}\n          />\n        </div>\n      </div>\n    </BaseLayout>\n  );\n}\n",["137","138"],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/auth/resetPasswordForm.tsx",[],["139","140"],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/profile/profilePage.tsx",["141"],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/layout/layout.tsx",[],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/forms/createConferenceForm.tsx",["142"],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/common/createConferenceFab.tsx",[],"/Users/stefantomsa/Facultate/classroom_hero/src/bundles/auth/loginForm.tsx",["143"],{"ruleId":"144","severity":1,"message":"145","line":12,"column":11,"nodeType":"146","messageId":"147","endLine":12,"endColumn":22},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"144","severity":1,"message":"152","line":34,"column":9,"nodeType":"146","messageId":"147","endLine":34,"endColumn":19},{"ruleId":"148","replacedBy":"153"},{"ruleId":"150","replacedBy":"154"},{"ruleId":"144","severity":1,"message":"155","line":8,"column":10,"nodeType":"146","messageId":"147","endLine":8,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":99,"column":6,"nodeType":"158","endLine":99,"endColumn":8,"suggestions":"159"},{"ruleId":"148","replacedBy":"160"},{"ruleId":"150","replacedBy":"161"},{"ruleId":"144","severity":1,"message":"162","line":11,"column":8,"nodeType":"146","messageId":"147","endLine":11,"endColumn":18},{"ruleId":"144","severity":1,"message":"163","line":6,"column":3,"nodeType":"146","messageId":"147","endLine":6,"endColumn":7},{"ruleId":"144","severity":1,"message":"164","line":16,"column":10,"nodeType":"146","messageId":"147","endLine":16,"endColumn":21},{"ruleId":"144","severity":1,"message":"165","line":21,"column":10,"nodeType":"146","messageId":"147","endLine":21,"endColumn":19},{"ruleId":"144","severity":1,"message":"166","line":15,"column":32,"nodeType":"146","messageId":"147","endLine":15,"endColumn":37},{"ruleId":"144","severity":1,"message":"167","line":15,"column":39,"nodeType":"146","messageId":"147","endLine":15,"endColumn":47},{"ruleId":"144","severity":1,"message":"168","line":1,"column":29,"nodeType":"146","messageId":"147","endLine":1,"endColumn":39},{"ruleId":"144","severity":1,"message":"169","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"170","line":26,"column":9,"nodeType":"146","messageId":"147","endLine":26,"endColumn":16},{"ruleId":"144","severity":1,"message":"166","line":16,"column":32,"nodeType":"146","messageId":"147","endLine":16,"endColumn":37},{"ruleId":"144","severity":1,"message":"167","line":16,"column":39,"nodeType":"146","messageId":"147","endLine":16,"endColumn":47},{"ruleId":"144","severity":1,"message":"171","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"144","severity":1,"message":"172","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":16},{"ruleId":"144","severity":1,"message":"164","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":21},{"ruleId":"144","severity":1,"message":"168","line":4,"column":29,"nodeType":"146","messageId":"147","endLine":4,"endColumn":39},{"ruleId":"144","severity":1,"message":"173","line":9,"column":26,"nodeType":"146","messageId":"147","endLine":9,"endColumn":32},{"ruleId":"156","severity":1,"message":"174","line":134,"column":6,"nodeType":"158","endLine":134,"endColumn":25,"suggestions":"175"},{"ruleId":"148","replacedBy":"176"},{"ruleId":"150","replacedBy":"177"},{"ruleId":"148","replacedBy":"178"},{"ruleId":"150","replacedBy":"179"},{"ruleId":"180","severity":2,"message":"181","line":8,"column":11,"nodeType":"182","endLine":8,"endColumn":21},{"ruleId":"144","severity":1,"message":"183","line":10,"column":3,"nodeType":"146","messageId":"147","endLine":10,"endColumn":21},{"ruleId":"144","severity":1,"message":"184","line":2,"column":40,"nodeType":"146","messageId":"147","endLine":2,"endColumn":50},"@typescript-eslint/no-unused-vars","'userDetails' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["185"],"no-negated-in-lhs",["186"],"'authFormik' is assigned a value but never used.",["185"],["186"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies'. Either include it or remove the dependency array.","ArrayExpression",["187"],["185"],["186"],"'BaseLayout' is defined but never used.","'List' is defined but never used.","'AuthContext' is defined but never used.","'isLoading' is assigned a value but never used.","'login' is assigned a value but never used.","'register' is assigned a value but never used.","'makeStyles' is defined but never used.","'Topnav' is defined but never used.","'classes' is assigned a value but never used.","'react' is defined but never used.","'ListItem' is defined but never used.","'Socket' is defined but never used.","React Hook useEffect has a missing dependency: 'conferenceId'. Either include it or remove the dependency array.",["188"],["185"],["186"],["185"],["186"],"react/jsx-no-undef","'BaseLayout' is not defined.","JSXIdentifier","'KeyboardTimePicker' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [cookies]",{"range":"193","text":"194"},"Update the dependencies array to be: [conferenceId, peer, userDetails]",{"range":"195","text":"196"},[2700,2702],"[cookies]",[4340,4359],"[conferenceId, peer, userDetails]"]